---
title: <span style="color:white">Hierarchical Models</span>
title-slide-attributes:
    data-background-image: /img/background3.png
format:
  revealjs:
    chalkboard: true
    multiplex: true
---


## Objectives

<!-- knitr::purl("./FW680A4/hierarchical.qmd", output="./classfiles/glmmlab/hierarchical.R") -->

-   General Use and Language
-   Examples
-   Case studies
    - random intercept
    - random intercept & slope
- Considerations

## Names

- multilevel model
- mixed model
- random effects model
- nested data model
- split-plot model

## Sort of definitions


- models where parameters vary at more than one level
- models in which lower levels are sorted under a hierarchy of successive higher-level units
- Generalization of linear and generalized linear modeling in which regression coefficients are themselves given a model whose parameters are also estimated from data (Gelman)
- Model where unobserved parameters are estimated as a function of other unobserved parameters


## Hobbs and Hooten 2015 (pg. 109)

::: {.incremental}

- Representing variation among individuals arising, for example, from genetics, location, or experience.

- Studying phenomena operating at more than one spatial scale or level of ecological organization.

- Modeling a process as well as uncertainty that results from imperfect observations of the process.

- Understanding changes in states of ecological systems that cannot be observed directly. These states arise from “hidden” processes.

:::

## General Types

- Random Effect / Multi-level Model

- latent/unobserved state or process


## Random Effect

[Andrew Gelman Blog Post](https://statmodeling.stat.columbia.edu/2005/01/25/why_i_dont_use/)

[Paper Link](http://www.stat.columbia.edu/~gelman/research/published/banova7.pdf)

"People are always asking me if I want to use a fixed or random effects model for this or that. "

. . .

<br>

"I always reply that these terms have no agreed-upon definition. "

. . .

<br>


"People with their own favorite definitions don’t always realize that other definitions are out there. Worse, people conflate different definitions".


## Example 1

- student grades within classroom, within school

![](/img/school.png)


## Example 2

- forest cover effect on occurrence of bobcats at different protected areas

![](/img/bobcat.png)

## Random Effect / Multi-level Model

- repeated *measurements* of individual within population

- repeated *measurements* at a small spatial scale that is part of a larger one


## Hierarchical Structure to Data

![](/img/HM1.png)

## Hierarchical Structure to Data

![](/img/HM2.png)

## Hierarchical Structure to Data

![](/img/HM.png)

## Hierarchical Structure to Data

![](/img/HM-general.png)

## Hierarchical Structure Example

**Study goals**

- Estimate state-wide average mass

- Understand site-level variation 

![](/img/mouse1.png)

## Hierarchical Structure Example

![](/img/mouse2.png)

## Complete Pooling

- Ignores variance across sites, which is a goal of study
- Data within sampling site might not be independent, leading to pseudoreplication (depressed variance)

![](/img/mouse3.png)


## No Pooling

- No state-level estimate
- Estimator for each site may be biased, particularly at low sample sizes

![](/img/mouse4.png)

##  Partial Pooling (Hierarhical Model)


![](/img/mouse5.png)

## Latent State {.scrollable}

<center>
![](/img/obs.latent.cube.png){width=50%}
</center>

![](/img/occupancy1.png){width=75%}

##
```{=html}

<br>
<br>
<br>
<br>
<br>
<center><span style="color:#C70039; font-size: 65px;";><b>Case Study</b></span></center>
```


## Data and Problem

We sample Amur Leopards in five different vegetation types of Land of the Leopard National Park. 

![](/img/Amur Leopard.png){fig-align="center"}

Interested in detection rate by vegetation type and overall. 

## Data and Problem

We sample Amur Leopards in five different vegetation types of Land of the Leopard National Park. 

![](/img/Amur Leopard.png){fig-align="center"}

**Detection Rate = Independent Counts / Effort**

## Data {.scrollable}

```{r echo=FALSE, eval=TRUE}
N.groups = 5
n.group = c(2,20,20,10,10)

mu.overall = log(20)
sd.overall = 1

set.seed(432423)
mu.group = rnorm(N.groups, mu.overall,sd.overall)
epsilon=0.1
#exp(mu.group)

y=c()
for(i in 1:N.groups){
  set.seed(432423+i)
y = c(y,rpois(n.group[i], exp(mu.group[i]+rnorm(1,0,epsilon))))
}

x = c(rep("Veg1",each=n.group[1]),rep(c("Veg2","Veg3"),each=n.group[2]),rep("Veg4",n.group[4]),rep("Veg5",n.group[5]))
dat = data.frame(y=y,veg=x, effort = 5)

```

:::: {.columns}

::: {.column width=35%}
```{r echo=FALSE, eval=TRUE}
head(dat)
table(dat$veg)
```

:::

::: {.column width=65%}
```{r echo=FALSE, eval=TRUE, fig.height=5}
library(ggplot2)
ggplot(dat, aes(x=veg, y=y, fill=veg)) + 
    geom_boxplot()+theme(text = element_text(size = 20)) 

```

:::

::::

## Model 1 (Complete Pooling) {.scrollable}

```{r echo=TRUE, eval=TRUE}
library(glmmTMB)
library(broom.mixed)

model1 = glmmTMB(y~1, family=poisson(link="log"),data=dat)
```

<br>

::: {.fragment}

```{r echo=TRUE, eval=TRUE}
summary(model1)
```

:::

## Model 1 (Complete Pooling) {.scrollable}


```{r echo=TRUE, eval=TRUE}
marginaleffects::predictions(model1,type = "response")
```


## Model 2 (No Pooling)

```{r echo=TRUE, eval=TRUE}
model2 = glmmTMB(y~veg, family=poisson(link="log"),data=dat,
                 contrasts = list(veg = "contr.sum"))
```


::: {.fragment}

```{r echo=TRUE, eval=TRUE}
summary(model2)
```

::: 

## Model 2 (No Pooling)

```{r echo=TRUE, eval=TRUE}
marginaleffects::predictions(model2, 
                             newdata = data.frame(veg=c("Veg1","Veg2","Veg3","Veg4","Veg5")),
                             re.form=NA)
```





## Model 3 (Partial Pooling) {.scrollable}

```{r echo=TRUE, eval=TRUE}
model3 = glmmTMB(y~1+(1|veg), family=poisson(link="log"),data=dat)
```

::: {.fragment}


```{r echo=TRUE, eval=TRUE}
summary(model3)
```

:::

## Model 3 (Partial Pooling) {.scrollable}

```{r echo=TRUE, eval=TRUE}
ranef(model3)
```

<br>


::: {.fragment}

```{r echo=TRUE, eval=TRUE}
broom.mixed::tidy(model3, effects = "ran_vals", conf.int = TRUE)
```

:::

<br>


::: {.fragment}

```{r echo=TRUE, eval=TRUE}
confint(model3, component = c("all"))
```

:::

<br>

<!-- ::: {.fragment} -->

<!-- ```{r echo=TRUE, eval=TRUE} -->
<!-- broom.mixed::tidy(model3, conf.int = TRUE) -->
<!-- ``` -->

<!-- ::: -->

<br>

::: {.fragment}

```{r echo=TRUE, eval=TRUE}
fixef(model3)
```

:::

<br>

::: {.fragment}

```{r echo=TRUE, eval=TRUE}
#Predictions - does not include RE uncertainty
preds = predict(model3,
                newdata=data.frame(veg=c("Veg1","Veg2","Veg3","Veg4","Veg5")),
                type="link",
                re.form=NULL,
                se.fit = TRUE
                )


preds$LCL = exp(preds$fit-1.96*preds$se.fit)
preds$UCL = exp(preds$fit+1.96*preds$se.fit)
preds$fit = exp(preds$fit)

data.frame(preds)
```

:::

<br>

::: {.fragment}

```{r echo=TRUE, eval=TRUE}
#A typical site (non an average site)
# Done by setting the random effect mean to 0
predict(model3,type="response",re.form=NA)[1]
```


:::



## Model 3b

```{r echo=TRUE, eval=TRUE}
library(lme4)
model3b = glmer(y~1+(1|veg), family=poisson(link="log"),data=dat)
```

::: {.fragment}

```{r echo=TRUE, eval=TRUE}
equatiomatic::extract_eq(model3b)
```

:::

## Alt Model Notation


\begin{align*}
y_{i} \sim& \text{Poisson}(\lambda_{i})\\
\text{log}(\lambda_{i}) =& \mu + \alpha_{j[i]}\\
 \alpha_{j} \sim& \text{Normal}(0, \sigma^2_{\alpha})

\end{align*}


## Pooling Information

```{r echo=FALSE,eval=TRUE}
library(plotrix)


m1.est=data.frame(confint(model1))


plot(1:5,rep(-50,5),ylim=c(2,4.2),xaxt='n',xlab="Vegetation",ylab="Coeficient",main="Estimates")
axis(1,at=1:5,lab=c("Veg1","Veg2","Veg3","Veg4","Veg5"))
abline(h=m1.est$Estimate,lwd=3,col=1,lty=1)
abline(h=m1.est$X2.5..,lwd=2,col=1,lty=4)
abline(h=m1.est$X97.5..,lwd=2,col=1,lty=4)
legend("topright",lwd=3,col=1,legend=c("Model 1, (y~1), Complete Pooling"))


```
## Pooling Information

```{r echo=FALSE,eval=TRUE}
m2.est=marginaleffects::predictions(model2, 
                             newdata = data.frame(veg=c("Veg1","Veg2","Veg3","Veg4","Veg5")),
                             re.form=NA,type="link")



plot(1:5,rep(-50,5),ylim=c(2,4.2),xaxt='n',xlab="Vegetation",ylab="Coeficient",main="Estimates")
axis(1,at=1:5,lab=c("Veg1","Veg2","Veg3","Veg4","Veg5"))
abline(h=m1.est$Estimate,lwd=3,col=1,lty=1)
abline(h=m1.est$X2.5..,lwd=2,col=1,lty=4)
abline(h=m1.est$X97.5..,lwd=2,col=1,lty=4)
legend("topright",lwd=3,col=1,legend=c("Model 1, (y~1), Complete Pooling"))


plotCI(1:5,y=m2.est$estimate,ui=m2.est$conf.high,li=m2.est$conf.low,pch=18,xaxt='n',add=TRUE,col="purple")



legend("topright",lwd=3,col=c(1,"purple"),legend=c("Model 1, (y~1), Complete Pooling",
                                       "Model 2, (y~x), No Pooling"))

```


## Pooling Information



```{r echo=FALSE,eval=TRUE}


m3.est = predict(model3,
                newdata=data.frame(veg=c("Veg1","Veg2","Veg3","Veg4","Veg5")),
                type="link",
                re.form=NULL,
                se.fit = TRUE
                )

m3.est$LCL = m3.est$fit-1.96*m3.est$se.fit
m3.est$UCL = m3.est$fit+1.96*m3.est$se.fit



plot(1:5,rep(-50,5),ylim=c(2,4.2),xaxt='n',xlab="Vegetation",ylab="Coeficient",main="Estimates")
axis(1,at=1:5,lab=c("Veg1","Veg2","Veg3","Veg4","Veg5"))
abline(h=m1.est$Estimate,lwd=3,col=1,lty=1)
abline(h=m1.est$X2.5..,lwd=2,col=1,lty=4)
abline(h=m1.est$X97.5..,lwd=2,col=1,lty=4)
legend("topright",lwd=3,col=1,legend=c("Model 1, (y~1), Complete Pooling"))

plotCI(1:5,y=m2.est$estimate,ui=m2.est$conf.high,li=m2.est$conf.low,pch=18,xaxt='n',add=TRUE,col="purple")

plotCI(1:5,y=m3.est$fit,ui=m3.est$UCL,li=m3.est$LCL,pch=18,xaxt='n',add=TRUE,col="green")


legend("topright",lwd=3,col=c(1,"purple","green"),legend=c("Model 1, (y~1), Complete Pooling",
                                       "Model 2, (y~veg), No Pooling",
                                       "Model 3, y~1+(1|veg), Partial Pooling"))

```



## Random Intercept + Slope

Leopard detection varies by cover and veg, where the effect of cover comes from a shared distribution

```{r echo=FALSE, eval=TRUE}
N.groups = 10
n.group = 50

mu.beta0 = 0
sd.beta0 = 1

mu.beta1 = 2
sd.beta1 = 0.2


set.seed(14324231)
beta0 = rnorm(N.groups, mu.beta0,sd.beta0)
beta1 = rnorm(N.groups, mu.beta1,sd.beta1)



y=NULL
x=NULL
for(i in 1:N.groups){
  set.seed(432423+i)
  x=c(x,rnorm(n.group))
y = c(y,
      rpois(n.group,exp(beta0[i]+beta1[i]*x))
      )
}

veg = rep(c("Veg1","Veg2","Veg3","Veg4","Veg5"),each=n.group)
dat2 = data.frame(y=y,cov=x,veg=veg)
head(dat2)
```


## Random Intercept + Slope

```{r echo=TRUE, eval=TRUE}
re.model = glmer(y~cov+(cov|veg), family=poisson(link="log"),data=dat2)
```


::: {.fragment}

```{r echo=TRUE, eval=TRUE}
summary(re.model)
```

:::

## Random Intercept + Slope

- Called conditional mean predictions

```{r echo=TRUE, eval=TRUE}
marginaleffects::plot_predictions(re.model, condition=c("cov","veg"),
                                  type="link", re.form=NULL)
```


## Random Intercept + Slope

- predictions for a 'typical site'; not an average site
[Stats4Ecologists](https://fw8051statistics4ecologists.netlify.app/glmm#glmminterp)

```{r echo=TRUE, eval=TRUE}
marginaleffects::plot_predictions(re.model, condition=c("cov","veg"),
                                  type="link", re.form=NA)
```

## Random Intercept + Slope

```{r echo=TRUE, eval=TRUE}
equatiomatic::extract_eq(re.model)
```



## FAQ

[GLMM FAQ](https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html)

- model specifications

- predictions with uncertainty

- Testing RE's

## Considerations

- Shrinkage/Regularization

- When to use a random effect?

## Lab



