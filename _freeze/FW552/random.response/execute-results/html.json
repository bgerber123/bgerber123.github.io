{
  "hash": "60cbb91604b13430a78a3bc3cbb7fc24",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <span style=\"color:white\">Random Response</span>\ntitle-slide-attributes:\n  data-background-image: /img/tenrec.png\n  background-opacity: \"0.45\"\nformat:\n  revealjs:\n    scrollable: true\n#    slide-level: 1\n    theme: simple\n    slide-number: true\n    show-slide-number: all\n    html:\n         page-layout: full\n---\n\n\n## [Surveys]{style=\"color:#078BCD;\"}\n\n```{=html}\n<style type=\"text/css\">\n\ncode.r{\n  font-size: 30px;\n}\n</style>\n```\n\n\n::: {.cell}\n\n:::\n\n#### What do we use surveys for in our field?\n\n![](../img/surveys.img.png)\n## [Non-Sampling Error]{style=\"color:#078BCD;\"}\n\n- Differences b/w estimate and true population quantities that [do not]{style=\"color:red;\"} arise because you didn't observe the whole population\n\n![](/../img/sources.error.png)\n\n## [Non-Sampling Error]{style=\"color:#078BCD;\"}\n\n#### Examples??\n\n- Sensitive topics\n- detection errors\n\n## [Dealing with non-response]{style=\"color:#078BCD;\"}\n\n- Prevent it through the design (best solution!)\n- Ignore it (common and may lead to bias)\n- Take representative subsample of non-respondents\n- Use a model / make assumptions \n\n\n## [Random Response Survey]{style=\"color:#078BCD;\"}\n\n#### How can we deal with non-response and \"wrong\" responses?\n\n<br>\n\n![Warner, S. L. (1965). Randomized response: A survey technique for eliminating evasive answer bias. Journal of the American statistical association, 60, 63-69.](https://doi.org/10.2307/2283137)\n\n\n## [Random Response Survey]{style=\"color:#078BCD;\"}\n\n**Combine probability math and a survey technique to ask your question indirectly**\n\n. . .\n\n- First: you need a mechanism to receive an answer w/o knowing which question is being asked\n- Second: you need to know the probability of the question\n- Third: record the answers, frequency of yes and no's\n\n## [Random Response Survey]{style=\"color:#078BCD;\"}\n\n::: {.incremental}\n\n- Start with identical note cards with a fraction ($\\theta$; this has to be known) marked\nwith $A$ and the remaining $(1- \\theta)$ marked with $B$.\n\n- If $A$, answer the question, e.g.,\n    - have you ever cheated on an exam\n\n- If $B$, answer the question, e.g.,  \n    - have you never cheated on an exam\n\n- A sample of people are chosen; each is asked to randomly draw a card and state ‘yes’ if they agree with the letter on the card or ‘no’ otherwise. \n\n- The interviewer does not ever see the card – just records ‘yes’ or ‘no’.\n\n:::\n\n\n## [Random Response Estimator]{style=\"color:#078BCD;\"}\n\n![](../img/random.tree.png)\n\n<!-- . . . -->\n\n<!-- $$ -->\n<!-- P(\\text{yes}) = \\theta p+(1-\\theta)\\times(1-p) -->\n<!-- $$ -->\n\n## [Random Response Estimator]{style=\"color:#078BCD;\"}\n\n\n$$\n\\frac{n_{\\text{yes}}}{n_{\\text{total}}} = \\theta p+(1-\\theta)\\times(1-p)\n$$\n\n## [Random Response Estimator]{style=\"color:#078BCD;\"}\n\n$$\n\\hat{p} = \\frac{1}{2\\theta-1} \\frac{n_{\\text{yes}}}{n_{\\text{total}}}-\\frac{1-\\theta}{2\\theta-1}\\text{where }\\theta\\ne0.5\n$$\n<br>\n\n$$\n\\hat{\\sigma}^2_p = \\frac{1}{n_{\\text{total}}}\\left( \\frac{1}{16(\\theta-0.5)^2}- (p-0.5)^2\\right)\n$$\n\n## [Lots of variations]{style=\"color:#078BCD;\"}\n\n- flip a coin to pick the question\n- Q1) primary, Q2) whether your phone number ends with an odd number\n\n![](../img/tree.random2.png)\n\n## [Test it?]{style=\"color:#078BCD;\"}\n\n#### What's our question?\n\n\n## [Evaluate the Estimator]{style=\"color:#078BCD;\"}\n\nLet's consider how the sample size ($n$) effects the sampling distribution of $\\hat{p}$\n\nAlso, consider how our choice of $\\theta$ effect the sampling distribution of $\\hat{p}$\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}