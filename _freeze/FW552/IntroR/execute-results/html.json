{
  "hash": "240eeb5baa1db234f5d50fb6c3015b79",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <span style=\"color:white\"><b>Simple R Intro</b></span>\ntitle-slide-attributes:\n  data-background-image: /img/coding.png\n  background-opacity: \"0.45\"\nformat:\n  revealjs:\n    chalkboard: true\n---\n\n\n\n## [RStudio]{style=\"color:green;\"}\n\n![](../img/RStudio1.png)\n\n## [RStudio]{style=\"color:green;\"}\n\n![](../img/RStudio2.png)\n\n## [Installing Packages]{style=\"color:green;\"}\n\n![](../img/RStudio4.png)\n\n\n## [The language of R]{style=\"color:green;\"}\n\n. . .\n\n### [**Objects**]{style=\"color:blue;\"}\n\nA storage place for information; stored in the \"Environment\"\n\n<br>\n\n::: fragment\n*'Attributes'* describes the structure or information of the object\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n### [**Objects**]{style=\"color:blue;\"}\n\n![](../img/RStudio3.png)\n\n## [The language of R]{style=\"color:green;\"}\n\n### [**Objects**]{style=\"color:blue;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# y is an 'object' that is assigned the value 3\ny = 3\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n::: fragment\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Same operation '=' '<-'\ny <- 3\n```\n:::\n\n\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n### [**Objects**]{style=\"color:blue;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# We can create new objects from objects\ny2 = y-2\ny2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# We can do math with our objects\n# Mind your parentheses (order of operation)\ny*2 / y*4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 8\n```\n\n\n:::\n\n```{.r .cell-code}\ny*2 / (y*4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<!-- ## [Challenge 1]{style=\"color:green;\"} {.scrollable} -->\n\n<!-- Compute the diameter (d) of the Earth (in km) at the equator using this formula for the circumfrance (c)... -->\n\n<!-- $$d = \\frac{c}{\\pi}$$ -->\n\n<!-- ::: {style=\"font-size: 75%;\"} -->\n<!-- -   c = 24,901.55 miles -->\n<!-- -   1 km = 0.621 miles -->\n<!-- -   **Hint** type in 'pi' to see what you get -->\n<!-- ::: -->\n\n<!-- ::: {style=\"font-size: 75%;\"} -->\n<!-- 1.  Convert the circumference from miles to km. -->\n<!-- 2.  Write the formula in R by defining objects and the values given to computer d in km. -->\n<!-- ::: -->\n\n<!-- ```{r} -->\n<!-- #| echo: TRUE -->\n<!-- #| eval: TRUE -->\n<!-- #| code-fold: true -->\n<!-- #| code-summary: \"Click for Answer\" -->\n\n<!-- c.km = 24901.55/0.621 -->\n\n<!-- d = c.km/pi -->\n\n<!-- ``` -->\n\n\n\n## [The language of R]{style=\"color:green;\"}\n\n### [**Functions**]{style=\"color:blue;\"}\n\n'does stuff'; creates or manipulates objects\n\n::: fragment\n*'Arguments'* are the types of things a function is asking for; the inputs\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n[**object**]{style=\"color:orange;\"} = [function]{style=\"color:blue;\"}([argument]{style=\"color:purple;\"} = input1, [argument]{style=\"color:purple;\"} = input2)\n\n<br>\n\n. . .\n\n[**object**]{style=\"color:orange;\"} = [function]{style=\"color:blue;\"}(input1, input2)\n\n\n<br>\n\n. . .\n\n[**this**]{style=\"color:orange;\"} = [sign]{style=\"color:blue;\"}([x]{style=\"color:purple;\"} = -5)\n\n<br>\n\n::: fragment\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsign(-5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1\n```\n\n\n:::\n\n```{.r .cell-code}\nsign(5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n:::\n\n\n## [The language of R]{style=\"color:green;\"} {.scrollable}\n\n### [**Functions**]{style=\"color:blue;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# function - 'c' - concatenate\ny = c(1,2,3,4,5,6)\n```\n:::\n\n\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# The function 'class' has the argument 'x'\nis.numeric(x = y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n### [**Functions**]{style=\"color:blue;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# How to find out the arguments of a function?\n?is.numeric\n```\n:::\n\n\n\n![](../img/is.numeric.png)\n\n## [The language of R]{style=\"color:green;\"}\n\n### Wrapping functions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Functions are commonly 1) wrapped, 2) have multiple arguments\nx = matrix( \n            data = c(1,2,3,4,5,6),\n            nrow = 2,\n            ncol = 3\n            )\n```\n:::\n\n\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n::: columns\n::: {.column width=\"50%\"}\n\n**Values**\n\n- numeric\n- integer\n- character\n- factor\n\n:::\n\n::: {.column width=\"50%\"}\n\n**Objects**\n\n- vector\n- matrix\n- array\n- list\n- dataframe\n- [S3, S4, S5, and beyond ]{style=\"color:purple;\"}\n\n:::\n\n:::\n\n\n## [Types of Values]{style=\"color:green;\"} {.scrollable}\n\n### Numeric\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny = 3\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n### Integer\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny = integer(3)\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n### Character\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny = \"habitat\"\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n### Factor\n\n\n::: {.cell}\n\n```{.r .cell-code}\ny = factor(\"habitat\")\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"factor\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"} {.scrollable}\n\n### Vector\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# An ordered collection indexed 1,2,...n\n# Using the function 'c' to concetanate\nz1 = c(4,5,6)\nz1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4 5 6\n```\n\n\n:::\n:::\n\n\n\nThe value 4 is in element/index/position 1 of the vector\n\nThe value 6 is in element/index/position 3 of the vector\n\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# the dimension of a vector\nlength(z1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A vector of characters\nz2 = c(\"dog\",\"cat\",\"horse\")\nz2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"dog\"   \"cat\"   \"horse\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz3 = c(\"dog\",\"1\",\"horse\")\nz3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"dog\"   \"1\"     \"horse\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<!-- <br> -->\n\n<!-- ::: fragment -->\n<!-- ```{r} -->\n<!-- #| echo: TRUE -->\n<!-- #| eval: TRUE -->\n<!-- z3 = c(\"dog\",1,\"horse\") -->\n<!-- z3 -->\n<!-- ``` -->\n:::\n\n##  [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Subsetting a vector\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz3 = c(\"dog\",\n       \"1\",\n       \"horse\",\n       \"chicken\"\n       )\nz3[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n2:4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 3 4\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz3[2:4]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\"       \"horse\"   \"chicken\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz3[c(2,4)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\"       \"chicken\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz3[-1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"1\"       \"horse\"   \"chicken\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n##  [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Vector of factors\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz4 = factor(\n            c(\"dog\", \n              \"dog\", \n              \"cat\",\n              \"horse\"\n              )\n           )\n```\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz4\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] dog   dog   cat   horse\nLevels: cat dog horse\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(z4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"cat\"   \"dog\"   \"horse\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(z4)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  cat   dog horse \n    1     2     1 \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Matrix\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = matrix(\n            c(1,2,3,4,5,6),\n            nrow = 2, \n            ncol = 3\n           )\n```\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rows and columns\ndim(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 3\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Subsetting a matrix\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get element of row 1 and column 2\nx[1,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\n\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get all elements of row 2\nx[2,]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 4 6\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# same as\nx[2,1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 4 6\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Array\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARRAY - more than two dimensions\nz5 = array(\n            c(\"a\",\"b\",\"c\",\"d\",\"1\",\"2\",\"3\",\"4\"), \n            dim = c(2,2,2)\n           )\n```\n:::\n\n\n\n\n<!-- <br> -->\n\n<!-- ::: fragment -->\n<!-- ```{r} -->\n<!-- #| echo: TRUE -->\n<!-- #| eval: TRUE -->\n\n<!-- dim(z5) -->\n\n<!-- ``` -->\n<!-- ::: -->\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nz5\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n, , 1\n\n     [,1] [,2]\n[1,] \"a\"  \"c\" \n[2,] \"b\"  \"d\" \n\n, , 2\n\n     [,1] [,2]\n[1,] \"1\"  \"3\" \n[2,] \"2\"  \"4\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### List\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# LIST - a bucket - will take anything\nmy.list = list(z1, z2, z3, z4, z5)\n```\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Subset a list\nmy.list[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 4 5 6\n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy.list[[4]]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] dog   dog   cat   horse\nLevels: cat dog horse\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Data frame\n\nE.g., a row for each observation and a column for each variable (can be different types).\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = data.frame(outcome = c(1,0,1,1),\n               exposure = c(\"yes\", \"yes\", \"no\", \"no\"),\n               age = c(24, 55, 39, 18)\n               )\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  outcome exposure age\n1       1      yes  24\n2       0      yes  55\n3       1       no  39\n4       1       no  18\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [Types of Objects]{style=\"color:green;\"}{.scrollable}\n\n### Subset data.frame\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx$exposure\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"yes\" \"yes\" \"no\"  \"no\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx['exposure']\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  exposure\n1      yes\n2      yes\n3       no\n4       no\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n<br>\n\n::: fragment\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx[,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"yes\" \"yes\" \"no\"  \"no\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n  |                                                        \n  |                                                  |   0%\n  |                                                        \n  |.                                                 |   1%                    \n  |                                                        \n  |.                                                 |   2% [unnamed-chunk-89] \n  |                                                        \n  |..                                                |   3%                    \n  |                                                        \n  |..                                                |   5% [unnamed-chunk-90] \n  |                                                        \n  |...                                               |   6%                    \n  |                                                        \n  |...                                               |   7% [unnamed-chunk-91] \n  |                                                        \n  |....                                              |   8%                    \n  |                                                        \n  |.....                                             |   9% [unnamed-chunk-92] \n  |                                                        \n  |.....                                             |  10%                    \n  |                                                        \n  |......                                            |  11% [unnamed-chunk-93] \n  |                                                        \n  |......                                            |  12%                    \n  |                                                        \n  |.......                                           |  14% [unnamed-chunk-94] \n  |                                                        \n  |.......                                           |  15%                    \n  |                                                        \n  |........                                          |  16% [unnamed-chunk-95] \n  |                                                        \n  |.........                                         |  17%                    \n  |                                                        \n  |.........                                         |  18% [unnamed-chunk-96] \n  |                                                        \n  |..........                                        |  19%                    \n  |                                                        \n  |..........                                        |  20% [unnamed-chunk-97] \n  |                                                        \n  |...........                                       |  22%                    \n  |                                                        \n  |...........                                       |  23% [unnamed-chunk-98] \n  |                                                        \n  |............                                      |  24%                    \n  |                                                        \n  |............                                      |  25% [unnamed-chunk-99] \n  |                                                        \n  |.............                                     |  26%                    \n  |                                                        \n  |..............                                    |  27% [unnamed-chunk-100]\n  |                                                        \n  |..............                                    |  28%                    \n  |                                                        \n  |...............                                   |  30% [unnamed-chunk-101]\n  |                                                        \n  |...............                                   |  31%                    \n  |                                                        \n  |................                                  |  32% [unnamed-chunk-102]\n  |                                                        \n  |................                                  |  33%                    \n  |                                                        \n  |.................                                 |  34% [unnamed-chunk-103]\n  |                                                        \n  |..................                                |  35%                    \n  |                                                        \n  |..................                                |  36% [unnamed-chunk-104]\n  |                                                        \n  |...................                               |  38%                    \n  |                                                        \n  |...................                               |  39% [unnamed-chunk-105]\n  |                                                        \n  |....................                              |  40%                    \n  |                                                        \n  |....................                              |  41% [unnamed-chunk-106]\n  |                                                        \n  |.....................                             |  42%                    \n  |                                                        \n  |......................                            |  43% [unnamed-chunk-107]\n  |                                                        \n  |......................                            |  44%                    \n  |                                                        \n  |.......................                           |  45% [unnamed-chunk-108]\n  |                                                        \n  |.......................                           |  47%                    \n  |                                                        \n  |........................                          |  48% [unnamed-chunk-109]\n  |                                                        \n  |........................                          |  49%                    \n  |                                                        \n  |.........................                         |  50% [unnamed-chunk-110]\n  |                                                        \n  |..........................                        |  51%                    \n  |                                                        \n  |..........................                        |  52% [unnamed-chunk-111]\n  |                                                        \n  |...........................                       |  53%                    \n  |                                                        \n  |...........................                       |  55% [unnamed-chunk-112]\n  |                                                        \n  |............................                      |  56%                    \n  |                                                        \n  |............................                      |  57% [unnamed-chunk-113]\n  |                                                        \n  |.............................                     |  58%                    \n  |                                                        \n  |..............................                    |  59% [unnamed-chunk-114]\n  |                                                        \n  |..............................                    |  60%                    \n  |                                                        \n  |...............................                   |  61% [unnamed-chunk-115]\n  |                                                        \n  |...............................                   |  62%                    \n  |                                                        \n  |................................                  |  64% [unnamed-chunk-116]\n  |                                                        \n  |................................                  |  65%                    \n  |                                                        \n  |.................................                 |  66% [unnamed-chunk-117]\n  |                                                        \n  |..................................                |  67%                    \n  |                                                        \n  |..................................                |  68% [unnamed-chunk-118]\n  |                                                        \n  |...................................               |  69%                    \n  |                                                        \n  |...................................               |  70% [unnamed-chunk-119]\n  |                                                        \n  |....................................              |  72%                    \n  |                                                        \n  |....................................              |  73% [unnamed-chunk-120]\n  |                                                        \n  |.....................................             |  74%                    \n  |                                                        \n  |......................................            |  75% [unnamed-chunk-121]\n  |                                                        \n  |......................................            |  76%                    \n  |                                                        \n  |.......................................           |  77% [unnamed-chunk-122]\n  |                                                        \n  |.......................................           |  78%                    \n  |                                                        \n  |........................................          |  80% [unnamed-chunk-123]\n  |                                                        \n  |........................................          |  81%                    \n  |                                                        \n  |.........................................         |  82% [unnamed-chunk-124]\n  |                                                        \n  |.........................................         |  83%                    \n  |                                                        \n  |..........................................        |  84% [unnamed-chunk-125]\n  |                                                        \n  |...........................................       |  85%                    \n  |                                                        \n  |...........................................       |  86% [unnamed-chunk-126]\n  |                                                        \n  |............................................      |  88%                    \n  |                                                        \n  |............................................      |  89% [unnamed-chunk-127]\n  |                                                        \n  |.............................................     |  90%                    \n  |                                                        \n  |.............................................     |  91% [unnamed-chunk-128]\n  |                                                        \n  |..............................................    |  92%                    \n  |                                                        \n  |...............................................   |  93% [unnamed-chunk-129]\n  |                                                        \n  |...............................................   |  94%                    \n  |                                                        \n  |................................................  |  95% [unnamed-chunk-130]\n  |                                                        \n  |................................................  |  97%                    \n  |                                                        \n  |................................................. |  98% [unnamed-chunk-131]\n  |                                                        \n  |................................................. |  99%                    \n  |                                                        \n  |..................................................| 100% [unnamed-chunk-132]\n                                                                                                              \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"IntroR.R\"\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}