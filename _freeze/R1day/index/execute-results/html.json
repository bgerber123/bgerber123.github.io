{
  "hash": "6adedc58b8baf05dc1d02c118efba94f",
  "result": {
    "markdown": "---\ntitle:  <span style=\"color:white\">Introduction to R </span>\ntitle-slide-attributes:\n  data-background-image: index_files/background.png\n  background-opacity: \"0.45\"\nformat: \n  revealjs:\n    theme: simple\n    slide-number: true\n    show-slide-number: all\n    chalkboard: true\n---\n\n\n## [Introductions]{style=\"color:green;\"}\n\n\n::: {.cell}\n<style type=\"text/css\">\n<!-- .big-code{ -->\n<!--   font-size: 140%   -->\n<!-- } -->\n\n\ncode {\n  font-size: 1.5em;\n  /* or try font-size: xx-large; */\n}\n\n</style>\n:::\n\n\n![](index_files\\logos.png)\n\n\n## [Why learn to code?]{style=\"color:green;\"}\n\n::: {.fragment}\n- efficiency\n- transparency\n- flexibility in application\n- shareable\n- marketable skill\n:::\n\n## [Why learn R?]{style=\"color:green;\"}\n\n::: {.fragment}\n- open-source and free\n- small total user base / large in ecology and statistics\n- find help online\n- data mgmt (tidyverse)\n- statistics\n- plotting / graphing\n:::\n\n\n## [Why use RStudio?]{style=\"color:green;\"}\n\n- Posit - Certified B corp\n- Brings tools together\n- [Projects (file mgmt)](https://support.posit.co/hc/en-us/articles/200526207-Using-RStudio-Projects)\n- [R Shiny](https://www.rstudio.com/products/shiny/)\n- [R Markdown](https://rmarkdown.rstudio.com/)\n- [Quarto](https://quarto.org/docs/get-started/hello/rstudio.html): interactive articles, websites, blog, ...\n\n\n\n## [How to learn R?]{style=\"color:green;\"}\n\n- [Intro to R for Biologists](https://melbournebioinformatics.github.io/r-intro-biologists/intro_r_biologists.html#R_for_Biologists_course)\n\n- [Introduction to R - tidyverse](https://bookdown.org/ansellbr/WEHI_tidyR_course_book/)\n\n- [R for Data Science (2e)](https://r4ds.hadley.nz/)\n\n- [Advanced R](https://adv-r.hadley.nz/index.html)\n\n- [Introduction to the R Language](https://bookdown.org/mcwimberly/gdswr-book/introduction-to-the-r-language.html#matrices-and-lists)\n\n- [Introduction to R](https://bookdown.org/palmjulia/r_intro_script/introduction.html)\n\n- [An Introduction to R for Research](https://bookdown.org/rwnahhas/IntroToR/)\n\n- [Introduction to Data Exploration ana Analysis with R](https://bookdown.org/mikemahoney218/IDEAR/)\n\n- [Working with Data in R](https://bookdown.org/ejvanholm/WorkingWithData/)\n\n\n## [Objectives]{style=\"color:green;\"}\n\n- R basics\n- RStudio basics\n\n- item 1\n- item 2\n- item 3\n- item 4\n\n\n## [The language of R]{style=\"color:green;\"}\n\n. . .\n\n### [**Objects** ]{style=\"color:blue;\"}\n\nA storage place for information\n\n::: {.fragment}\n*'Attributes'* describes the structure or information of the object\n:::\n\n::: {.fragment}\n### [**Functions** ]{style=\"color:blue;\"}\n'does stuff'; creates or manipulates objects\n:::\n\n::: {.fragment}\n*'Arguments'* are the types of things a function is asking for; the inputs\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n#### [**Objects** ]{style=\"color:blue;\"}\n\n::: {.cell}\n\n```{.r .cell-code}\n# y is an 'object' that is assigned the value 3\ny <- 3\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n\n<br>\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Same operation '=' '<-'\ny <- 3\n```\n:::\n\n:::\n\n## [The language of R]{style=\"color:green;\"}\n\n#### [**Objects** ]{style=\"color:blue;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#We can create new objects from objects\ny2 = y-2\ny2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n:::\n\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n# We can do math with our objects\n# Mind your parantheses (order of operation)\ny*2 / y*4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 8\n```\n:::\n\n```{.r .cell-code}\ny*2 / (y*4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5\n```\n:::\n:::\n\n:::\n\n\n## [The language of R]{style=\"color:green;\"}{.scrollable}\n\n#### [**Functions** ]{style=\"color:blue;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# functions\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"numeric\"\n```\n:::\n:::\n\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nis.numeric(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: \n\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n# The function 'class' has the argment 'x'\nis.numeric(x=y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n::: \n\n## [The language of R]{style=\"color:green;\"}\n\n[**Functions** ]{style=\"color:blue;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#How to find out the arguments are of a function?\n?is.numeric\n```\n:::\n\n\n![](./index_files/is.numeric.png)\n\n## Wrapping functions\n\n::: {.cell}\n\n```{.r .cell-code}\n#Functions can be wrapped around each other\n#Functions commonly have multiple arguments\n\nx <- matrix( \n            data = c(1,2,3,4,5,6),\n            nrow = 2,\n            ncol = 3\n            )\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n:::\n\n\n\n## Types of Objects {.scrollable}\n\n#### Numeric\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\ny <- 3\n```\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n#### Character\n\n::: {.cell}\n\n```{.r .cell-code}\ny = \"habitat\"\nclass(y)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"character\"\n```\n:::\n:::\n\n:::\n\n\n<br>\n\n::: {.fragment}\n#### Vector\n\n::: {.cell}\n\n```{.r .cell-code}\n#An ordered collection indexed 1,2,...n\n#Using the function 'c' to concetanate\nz1 = c(4,5,6)\nz1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 5 6\n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n# A vector of characters\nz2 = c(\"dog\",\"cat\",\"horse\")\nz2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dog\"   \"cat\"   \"horse\"\n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nz3 = c(\"dog\",\"1\")\nz3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dog\" \"1\"  \n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nz3 = c(\"dog\",1)\nz3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dog\" \"1\"  \n```\n:::\n:::\n\n:::\n\n\n## Types of Objects {.scrollable}\n\n#### Subsetting a vector\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nz3 = c(\"dog\",\"1\")\nz3[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dog\"\n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nz3[2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"1\"\n```\n:::\n:::\n\n:::\n\n## Types of Objects {.scrollable}\n\n#### Factor, a special kind of character string\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nz4 = factor(\n            c(\"dog\", \"dog\", \"cat\",\"horse\",\"horse\")\n           )\nz4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] dog   dog   cat   horse horse\nLevels: cat dog horse\n```\n:::\n:::\n\n:::\n  \n<br>  \n  \n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(z4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"cat\"   \"dog\"   \"horse\"\n```\n:::\n:::\n\n:::\n\n\n\n## Types of Objects {.scrollable}\n\n#### Matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- matrix(\n            c(1,2,3,4,5,6),\n            nrow = 2, \n            ncol = 3\n           )\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     [,1] [,2] [,3]\n[1,]    1    3    5\n[2,]    2    4    6\n```\n:::\n\n```{.r .cell-code}\ndim(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 3\n```\n:::\n:::\n\n\n\n::: {.fragment}\n#### Subsetting a matrix\n\n::: {.cell}\n\n```{.r .cell-code}\n#get element of row 1 and column 2\nx[1,2]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3\n```\n:::\n:::\n\n:::\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n#get element of row 2 and column 6\nx[2,3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n:::\n\n:::\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n#get element all elements of row 2\nx[2,]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 4 6\n```\n:::\n:::\n\n:::\n\n\n\n## Types of Objects {.scrollable}\n\n#### Array\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ARRAY - more than just two dimensions\nz5 <- array(\n            c(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"), \n            dim=c(2,2,2)\n           )\nz5\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n, , 1\n\n     [,1] [,2]\n[1,] \"a\"  \"c\" \n[2,] \"b\"  \"d\" \n\n, , 2\n\n     [,1] [,2]\n[1,] \"e\"  \"a\" \n[2,] \"f\"  \"b\" \n```\n:::\n\n```{.r .cell-code}\ndim(z5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2 2 2\n```\n:::\n:::\n\n\n\n## Types of Objects \n\n#### List\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n# LIST - a bucket - will take anything\nmy.list = list(z1,z2,z3,z4,z5)\n```\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\n#Subset a list\nmy.list[[1]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4 5 6\n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nmy.list[[4]]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] dog   dog   cat   horse horse\nLevels: cat dog horse\n```\n:::\n:::\n\n:::\n\n\n## Types of Objects \n\n#### Data frame\n\nA row for each observation and a column for each variable (can be different types).\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- data.frame(outcome = c(1,0,1,1),\n                exposure = c(\"yes\", \"yes\", \"no\", \"no\"),\n                age = c(24, 55, 39, 18))\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  outcome exposure age\n1       1      yes  24\n2       0      yes  55\n3       1       no  39\n4       1       no  18\n```\n:::\n:::\n\n:::\n\n\n## Types of Objects \n\n#### Subset data.frame\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nx$outcome\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 0 1 1\n```\n:::\n:::\n\n:::\n\n<br>\n\n::: {.fragment}\n\n::: {.cell}\n\n```{.r .cell-code}\nx['exposure']\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  exposure\n1      yes\n2      yes\n3       no\n4       no\n```\n:::\n:::\n\n:::\n\n\n## [Challenge]{style=\"color:green;\"}{.scrollable}\n\nCompute the diameter (d) of the Earth (in km) at the equator using this formula for the circumfrance (c)...\n\n$$d = \\frac{c}{\\pi}$$\n\n::: {style=\"font-size: 75%;\"}\n- c = 24,901.55 miles\n- 1 km = 0.621 miles\n- **Hint** type in \"pi\" to see what you get\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n1. Convert the circumference from miles to km.\n2. Write the formula in R and plug in the value for circumference\n:::\n\n\n## [Challenge]{style=\"color:green;\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc.km = 24901.55/0.621\n\nd = c.km/(pi)\n\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12763.94\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}