{
  "hash": "5c30148d4c789e60296d419da37c9f93",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: <span style=\"color:white\">Hierarchical Models</span>\ntitle-slide-attributes:\n    data-background-image: /img/background3.png\nformat:\n  revealjs:\n    chalkboard: true\n    multiplex: true\n---\n\n\n\n## Objectives\n\n<!-- knitr::purl(\"./FW680A4/hierarchical.qmd\", output=\"./classfiles/glmmlab/hierarchical.R\") -->\n\n-   General Use and Language\n-   Examples\n-   Case studies\n    - random intercept\n    - random intercept & slope\n- Considerations\n\n## Names\n\n- multilevel model\n- mixed model\n- random effects model\n- nested data model\n- split-plot model\n\n## Sort of definitions\n\n\n- models where parameters vary at more than one level\n- models in which lower levels are sorted under a hierarchy of successive higher-level units\n- Generalization of linear and generalized linear modeling in which regression coefficients are themselves given a model whose parameters are also estimated from data (Gelman)\n- Model where unobserved parameters are estimated as a function of other unobserved parameters\n\n\n## Hobbs and Hooten 2015 (pg. 109)\n\n::: {.incremental}\n\n- Representing variation among individuals arising, for example, from genetics, location, or experience.\n\n- Studying phenomena operating at more than one spatial scale or level of ecological organization.\n\n- Modeling a process as well as uncertainty that results from imperfect observations of the process.\n\n- Understanding changes in states of ecological systems that cannot be observed directly. These states arise from “hidden” processes.\n\n:::\n\n## General Types\n\n- Random Effect / Multi-level Model\n\n- latent/unobserved state or process\n\n\n## Random Effect\n\n[Andrew Gelman Blog Post](https://statmodeling.stat.columbia.edu/2005/01/25/why_i_dont_use/)\n\n[Paper Link](http://www.stat.columbia.edu/~gelman/research/published/banova7.pdf)\n\n\"People are always asking me if I want to use a fixed or random effects model for this or that. \"\n\n. . .\n\n<br>\n\n\"I always reply that these terms have no agreed-upon definition. \"\n\n. . .\n\n<br>\n\n\n\"People with their own favorite definitions don’t always realize that other definitions are out there. Worse, people conflate different definitions\".\n\n\n## Example 1\n\n- student grades within classroom, within school\n\n![](/img/school.png)\n\n\n## Example 2\n\n- forest cover effect on occurrence of bobcats at different protected areas\n\n![](/img/bobcat.png)\n\n## Random Effect / Multi-level Model\n\n- repeated *measurements* of individual within population\n\n- repeated *measurements* at a small spatial scale that is part of a larger one\n\n\n## Hierarchical Structure to Data\n\n![](/img/HM1.png)\n\n## Hierarchical Structure to Data\n\n![](/img/HM2.png)\n\n## Hierarchical Structure to Data\n\n![](/img/HM.png)\n\n## Hierarchical Structure to Data\n\n![](/img/HM-general.png)\n\n## Hierarchical Structure Example\n\n**Study goals**\n\n- Estimate state-wide average mass\n\n- Understand site-level variation \n\n![](/img/mouse1.png)\n\n## Hierarchical Structure Example\n\n![](/img/mouse2.png)\n\n## Complete Pooling\n\n- Ignores variance across sites, which is a goal of study\n- Data within sampling site might not be independent, leading to pseudoreplication (depressed variance)\n\n![](/img/mouse3.png)\n\n\n## No Pooling\n\n- No state-level estimate\n- Estimator for each site may be biased, particularly at low sample sizes\n\n![](/img/mouse4.png)\n\n##  Partial Pooling (Hierarhical Model)\n\n\n![](/img/mouse5.png)\n\n## Latent State\n\n![](/img/occupancy0.png)\n\n\n## Latent State\n\n![](/img/occupancy1.png)\n\n##\n\n```{=html}\n\n<br>\n<br>\n<br>\n<br>\n<br>\n<center><span style=\"color:#C70039; font-size: 65px;\";><b>Case Study</b></span></center>\n```\n\n\n\n## Data and Problem\n\nWe sample Amur Leopards in five different vegetation types of Land of the Leopard National Park. \n\n![](/img/Amur Leopard.png){fig-align=\"center\"}\n\nInterested in detection rate by vegetation type and overall. \n\n## Data and Problem\n\nWe sample Amur Leopards in five different vegetation types of Land of the Leopard National Park. \n\n![](/img/Amur Leopard.png){fig-align=\"center\"}\n\n**Detection Rate = Independent Counts / Effort**\n\n## Data {.scrollable}\n\n\n::: {.cell}\n\n:::\n\n\n:::: {.columns}\n\n::: {.column width=35%}\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   y  veg effort\n1 15 Veg1      5\n2 18 Veg1      5\n3 12 Veg2      5\n4 14 Veg2      5\n5 12 Veg2      5\n6 14 Veg2      5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nVeg1 Veg2 Veg3 Veg4 Veg5 \n   2   20   20   10   10 \n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=65%}\n\n::: {.cell}\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n## Model 1 (Complete Pooling) {.scrollable}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glmmTMB)\nlibrary(broom.mixed)\n\nmodel1 = glmmTMB(y~1, family=poisson(link=\"log\"),data=dat)\n```\n:::\n\n\n<br>\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: poisson  ( log )\nFormula:          y ~ 1\nData: dat\n\n     AIC      BIC   logLik deviance df.resid \n   532.2    534.4   -265.1    530.2       61 \n\n\nConditional model:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  2.91165    0.02962   98.31   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n:::\n\n## Model 1 (Complete Pooling) {.scrollable}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarginaleffects::predictions(model1,type = \"response\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Estimate Std. Error    z Pr(>|z|)     S 2.5 % 97.5 %\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n--- 52 rows omitted. See ?avg_predictions and ?print.marginaleffects --- \n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\n     18.4      0.545 33.8   <0.001 827.7  17.3   19.5\nColumns: rowid, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, y \nType:  response \n```\n\n\n:::\n:::\n\n\n\n## Model 2 (NO Pooling)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2 = glmmTMB(y~veg, family=poisson(link=\"log\"),data=dat,\n                 contrasts = list(veg = \"contr.sum\"))\n```\n:::\n\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: poisson  ( log )\nFormula:          y ~ veg\nData: dat\n\n     AIC      BIC   logLik deviance df.resid \n   369.4    380.1   -179.7    359.4       57 \n\n\nConditional model:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  2.93764    0.04235   69.37  < 2e-16 ***\nveg1        -0.13427    0.14133   -0.95    0.342    \nveg2        -0.42398    0.06498   -6.52 6.82e-11 ***\nveg3        -0.29146    0.06262   -4.65 3.25e-06 ***\nveg4         0.47681    0.06138    7.77 7.94e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n::: \n\n## Model 2 (No Pooling)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarginaleffects::predictions(model2, \n                             newdata = data.frame(veg=c(\"Veg1\",\"Veg2\",\"Veg3\",\"Veg4\",\"Veg5\")),\n                             re.form=NA)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Estimate Std. Error     z Pr(>|z|)     S 2.5 % 97.5 %\n     16.5      2.872  5.74   <0.001  26.7  10.9   22.1\n     12.4      0.786 15.72   <0.001 182.5  10.8   13.9\n     14.1      0.840 16.79   <0.001 207.8  12.5   15.7\n     30.4      1.744 17.44   <0.001 223.7  27.0   33.8\n     27.4      1.655 16.55   <0.001 202.0  24.2   30.6\n\nColumns: rowid, estimate, std.error, statistic, p.value, s.value, conf.low, conf.high, veg, y \nType:  response \n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Model 3 (Partial Pooling) {.scrollable}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel3 = glmmTMB(y~1+(1|veg), family=poisson(link=\"log\"),data=dat)\n```\n:::\n\n\n::: {.fragment}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Family: poisson  ( log )\nFormula:          y ~ 1 + (1 | veg)\nData: dat\n\n     AIC      BIC   logLik deviance df.resid \n   384.4    388.6   -190.2    380.4       60 \n\nRandom effects:\n\nConditional model:\n Groups Name        Variance Std.Dev.\n veg    (Intercept) 0.1299   0.3604  \nNumber of obs: 62, groups:  veg, 5\n\nConditional model:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   2.9391     0.1662   17.69   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n:::\n\n## Model 3 (Partial Pooling) {.scrollable}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranef(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$veg\n     (Intercept)\nVeg1  -0.1103110\nVeg2  -0.4126484\nVeg3  -0.2851561\nVeg4   0.4635429\nVeg5   0.3612502\n```\n\n\n:::\n:::\n\n\n<br>\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbroom.mixed::tidy(model3, effects = \"ran_vals\", conf.int = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 9\n  effect   component group level term      estimate std.error conf.low conf.high\n  <chr>    <chr>     <chr> <chr> <chr>        <dbl>     <dbl>    <dbl>     <dbl>\n1 ran_vals cond      veg   Veg1  (Interce…   -0.110     0.206  -0.514     0.294 \n2 ran_vals cond      veg   Veg2  (Interce…   -0.413     0.173  -0.751    -0.0738\n3 ran_vals cond      veg   Veg3  (Interce…   -0.285     0.172  -0.622     0.0520\n4 ran_vals cond      veg   Veg4  (Interce…    0.464     0.172   0.126     0.801 \n5 ran_vals cond      veg   Veg5  (Interce…    0.361     0.173   0.0230    0.699 \n```\n\n\n:::\n:::\n\n\n:::\n\n<br>\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconfint(model3, component = c(\"all\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                            2.5 %    97.5 %  Estimate\n(Intercept)             2.6134002 3.2647754 2.9390878\nStd.Dev.(Intercept)|veg 0.1896794 0.6846043 0.3603545\n```\n\n\n:::\n:::\n\n\n:::\n\n<br>\n\n<!-- ::: {.fragment} -->\n\n<!-- ```{r echo=TRUE, eval=TRUE} -->\n<!-- broom.mixed::tidy(model3, conf.int = TRUE) -->\n<!-- ``` -->\n\n<!-- ::: -->\n\n<br>\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfixef(model3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nConditional model:\n(Intercept)  \n      2.939  \n```\n\n\n:::\n:::\n\n\n:::\n\n<br>\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Predictions - does not include RE uncertainty\npreds = predict(model3,\n                newdata=data.frame(veg=c(\"Veg1\",\"Veg2\",\"Veg3\",\"Veg4\",\"Veg5\")),\n                type=\"link\",\n                re.form=NULL,\n                se.fit = TRUE\n                )\n\n\npreds$LCL = exp(preds$fit-1.96*preds$se.fit)\npreds$UCL = exp(preds$fit+1.96*preds$se.fit)\npreds$fit = exp(preds$fit)\n\ndata.frame(preds)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       fit     se.fit      LCL      UCL\n1 16.92475 0.15877885 12.39843 23.10348\n2 12.50889 0.06300056 11.05583 14.15291\n3 14.20980 0.05890828 12.66030 15.94893\n4 30.04303 0.05761047 26.83519 33.63433\n5 27.12181 0.06039730 24.09392 30.53021\n```\n\n\n:::\n:::\n\n\n:::\n\n<br>\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#A typical site\npredict(model3,type=\"response\",re.form=NA)[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 18.8986\n```\n\n\n:::\n:::\n\n\n\n:::\n\n\n\n## Model 3b\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\nmodel3b = glmer(y~1+(1|veg), family=poisson(link=\"log\"),data=dat)\n```\n:::\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequatiomatic::extract_eq(model3b)\n```\n\n::: {.cell-output-display}\n$$\n\\begin{aligned}\n  \\operatorname{y}_{i}  &\\sim \\operatorname{Poisson}(\\lambda_i) \\\\\n    \\log(\\lambda_i) &=\\alpha_{j[i]} \\\\\n    \\alpha_{j}  &\\sim N \\left(\\mu_{\\alpha_{j}}, \\sigma^2_{\\alpha_{j}} \\right)\n    \\text{, for veg j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$\n\n:::\n:::\n\n\n:::\n\n## Alt Model Notation\n\n\n\\begin{align*}\ny_{i} \\sim& \\text{Poisson}(\\lambda_{i})\\\\\n\\text{log}(\\lambda_{i}) =& \\mu + \\alpha_{j[i]}\\\\\n \\alpha_{j} \\sim& \\text{Normal}(0, \\sigma^2_{\\alpha})\n\n\\end{align*}\n\n\n## Pooling Information\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n## Pooling Information\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n## Pooling Information\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n\n## Random Intercept + Slope\n\nLeopard detection varies by cover and veg, where the effect of cover comes from a shared distribution\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  y         cov  veg\n1 3  0.40161608 Veg1\n2 0 -0.12360373 Veg1\n3 3  0.62883136 Veg1\n4 0  0.07607150 Veg1\n5 2  0.04150764 Veg1\n6 0 -0.39289231 Veg1\n```\n\n\n:::\n:::\n\n\n\n## Random Intercept + Slope\n\n\n::: {.cell}\n\n```{.r .cell-code}\nre.model = glmer(y~cov+(cov|veg), family=poisson(link=\"log\"),data=dat2)\n```\n:::\n\n\n\n::: {.fragment}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(re.model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: poisson  ( log )\nFormula: y ~ cov + (cov | veg)\n   Data: dat2\n\n     AIC      BIC   logLik deviance df.resid \n 14274.7  14295.8  -7132.4  14264.7      495 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n -4.798  -2.443  -1.630  -0.946 145.188 \n\nRandom effects:\n Groups Name        Variance Std.Dev. Corr\n veg    (Intercept) 0.4896   0.6997       \n        cov         0.1392   0.3732   0.14\nNumber of obs: 500, groups:  veg, 5\n\nFixed effects:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)   1.6210     0.3137   5.166 2.39e-07 ***\ncov           0.1121     0.1683   0.666    0.505    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n    (Intr)\ncov 0.140 \n```\n\n\n:::\n:::\n\n\n:::\n\n## Random Intercept + Slope\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarginaleffects::plot_predictions(re.model,\n                                  condition=c(\"cov\",\"veg\"),\n                                  type=\"link\",\n                                  re.form=NULL\n                                  )\n```\n\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n## Random Intercept + Slope\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarginaleffects::plot_predictions(re.model,\n                                  condition=c(\"cov\",\"veg\"),\n                                  type=\"link\",\n                                  re.form=NA\n                                  )\n```\n\n::: {.cell-output-display}\n![](hierarchical_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n## Random Intercept + Slope\n\n\n::: {.cell}\n\n```{.r .cell-code}\nequatiomatic::extract_eq(re.model)\n```\n\n::: {.cell-output-display}\n$$\n\\begin{aligned}\n  \\operatorname{y}_{i}  &\\sim \\operatorname{Poisson}(\\lambda_i) \\\\\n    \\log(\\lambda_i) &=\\alpha_{j[i]} + \\beta_{1j[i]}(\\operatorname{cov}) \\\\    \n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\alpha_{j} \\\\\n      &\\beta_{1j}\n    \\end{aligned}\n  \\end{array}\n\\right)\n  &\\sim N \\left(\n\\left(\n  \\begin{array}{c} \n    \\begin{aligned}\n      &\\mu_{\\alpha_{j}} \\\\\n      &\\mu_{\\beta_{1j}}\n    \\end{aligned}\n  \\end{array}\n\\right)\n, \n\\left(\n  \\begin{array}{cc}\n     \\sigma^2_{\\alpha_{j}} & \\rho_{\\alpha_{j}\\beta_{1j}} \\\\ \n     \\rho_{\\beta_{1j}\\alpha_{j}} & \\sigma^2_{\\beta_{1j}}\n  \\end{array}\n\\right)\n \\right)\n    \\text{, for veg j = 1,} \\dots \\text{,J}\n\\end{aligned}\n$$\n\n:::\n:::\n\n\n\n\n## FAQ\n\n[GLMM FAQ](https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html)\n\n- model specifications\n\n- predictions with uncertainty\n\n- Testing RE's\n\n## Considerations\n\n- Shrinkage/Regularization\n\n- When to use a random effect?\n\n## Lab\n\n\n\n",
    "supporting": [
      "hierarchical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}