{
  "hash": "15f386608dfaae61dc70a0a45c22cf51",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Habitat Selection Lab\"\nauthor: \"Brian Gerber\"\ndate: \"2024-11-07\"\noutput: html_document\n---\n\n\n\n\n# Context\n\nWhen we fit a habitat selection model (commonly called a resource selection function) we are often using convenient and general software/code to approximate the true underlying model. Specifically, we commonly use logistic regression to approximate the spatial point process model we are actually interested in fitting. To make sure our approximation of the point process model is done with minimal approximation error, we need to have a very large available sample (i.e., we need many zeros and their associated environmental covaraites) taken from the area/landscape/home range we are considering available to the individual(s).\n\n## Assignment (Part 1)\n\nConduct a sensitivity analysis to investigate how large the available sample needs to be for the slope coefficient estimates to stabilize. Essentially, you want to increase the available sample size until the estimated coefficients no longer change. How you create your available sample (e.g., random sampling, systematic sampling) will determine when the estimated coefficients stop changing. The other factor is the error tolerance that you will accept. Lets use an error tolerance of 2 decimal places. Meaning, you want to increase the available sample until the first two decimal places of the estimated coefficients no longer change. \n\n\nYou will need to create several/many datasets with different sizes of the available sample (i.e, the number of zeros). Remember, the number of used locations (1's) is the same for each dataset. Fit the same model (case_ ~ forest + cover) to each of these datasets. Extract the slope coefficients for the variables 'forest' and 'shurb.cover'. Create a table of coefficient estimates along with the size of the available sample used (i.e., columns of 1) Size of available sample, 2) coef for forest, and 3) coef for shrub). Looking at the table, decide on whether the coefficient estimates have stabilized. Make sure to use a wide range of sizes of available samples. If you are unsure if they have converged, keep increasing the available sample size.\n\nSecondly, compare the converged coeficient estimates to a model fit using a 1:1 ratio of used locations to available locations. This is a common recommendation in the literature. If you had only fit the model with this size of available locations, how would your estimates compare to the estimates you get when using a very large available sample (converged estimates)? If there is any difference, this is due to approximation error. State how much error there is and whether it is a meaningful amount. \n\n### Note\n\nHow you setup this sensitivity analysis will affect your ability to get estimates to converge. For example, if you take separate random samples, it might take a very large number (maybe more than a million) to get the estimates to converge. This is because there is no consistency between random draws of available sample. This stochasticity adds some additional variation when estimating. Another option would be to create a very large sample of available locations first and then create smaller subsets of these. \n\n## Assignment (Part 2)\n\nUse the deer data provided in the amt package to fit a new habitat selection model that we have not considered yet. I would like you to fit a model where you hypothesize that selection for the proportion of forest changes depending on the time of day. Specifically, during daytime and nighttime. The idea being that risk changes to the deer depending on the time of day because of changes in predator and human activity. Please fit a model where there is an interaction between time of day (see code below how to get this covariate) and percent of forest cover. Please interpret your findings in terms of the estimated coefficients. If you want to go a bit further, make predictions of the relative intensity of selection for relevant covariate combinations. In terms of the available sample, use a very large available sample, but you do not need to conduct a sensitivity analysis.\n\nSince time of day is not a spatial variable, it is a bit different to include as a covariate. We have the time of day (day, night) for each used location, but we need to combined two sets of available samples: one with our spatial variables that are defined during the day, and the second with the same spatial variables but that are defined at night.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Setup environment\n# Include time of day variable\n  deer = time_of_day(deer)\n  head(deer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 Ã— 5\n        x_       y_ t_                  burst_ tod_ \n*    <dbl>    <dbl> <dttm>               <dbl> <fct>\n1 4314068. 3445807. 2008-03-30 00:01:47      1 night\n2 4314053. 3445768. 2008-03-30 06:00:54      1 day  \n3 4314105. 3445859. 2008-03-30 12:01:47      1 day  \n4 4314044. 3445785. 2008-03-30 18:01:24      1 night\n5 4313015. 3445858. 2008-03-31 00:01:23      1 night\n6 4312860. 3445857. 2008-03-31 06:01:45      1 day  \n```\n\n\n:::\n:::\n\n\n\n\n### Setup available sample\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create MCP home rnage with 5000 m bufer\nhr <- hr_mcp(deer) |> hr_isopleths() |> \n  sf::st_buffer(dist =5000)\n\n\n# Draw random available samples\n  set.seed(5454)\n  rsf1 <- random_points(hr, n=20000, presence = deer) |> \n    extract_covariates(forest.cover)  \n  table(rsf1$case_)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFALSE  TRUE \n20000   826 \n```\n\n\n:::\n\n```{.r .cell-code}\nplot(rsf1)\n```\n\n::: {.cell-output-display}\n![](habsel.assignment_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\n### Create data set with time of day\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find where the used locations are and the available locations\n  index.1=which(rsf1$case_==1)\n  index.0=which(rsf1$case_==0)\n\n# Create a new column for 'time of day', tod\n# Put temporary values\n  rsf1$tod=\"temp\"\n\n#For the used locations, put in the observed time of day\n  rsf1$tod[index.1] = as.character(deer$tod_)\n  \n#For the available samples make these all 'day'  \n  rsf1$tod[index.0] = \"day\"\n\n#Now, we need to replicate the available sample but for 'night'\n  temp = rsf1[index.0,]\n  temp$tod=\"night\"\n\n#Combine the used locations, available sample with 'day', and the available sample with 'night'  \n  rsf.combined = rbind(rsf1,temp)\n```\n:::\n\n\n\n\nThe object `rsf.combined` can not be used to fit the model with `forest` and `tod`.\n",
    "supporting": [
      "habsel.assignment_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}